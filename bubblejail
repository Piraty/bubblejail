#!/bin/bash


__version__=0.2.0

usage() {
	app="$(basename "$0")"
	cat <<USAGE
$app [OPTIONS] [BWRAP_OPTIONS] COMMAND [ARGS] - run command in container

DESCRIPTION
	Run COMMAND [ARGS] in a sandbox by using the bubblewrap container setup
	utility (see: https://github.com/containers/bubblewrap/).

	The sandbox is configured to be most restrictive by default but allows for
	easy expansion on a per-application base.

	OPTIONS provide an easy way opt-in to common use-cases. They may optionally
	be followed by BWRAP_OPTIONS which will be appended as raw option to the
	actual bwrap call. Note that OPTIONS may not come after BWRAP_OPTIONS.

OPTIONS
  General options:

	--help
		Show this help

	--debug
		Show bwrap command line

  High-level options:

	--network
		Add network features. Currently equivalent with: --need-dns
		--need-netns --need-nss

	--x11
		Make X11 work

  Low-level options:
	--need-dev           Mount new devtmpfs
	--need-proc          Mount procfs

	--need-dns           Share /etc/resolv.conf with container
	--need-nss

	--ro <path>          bind <path> in the container (read-only)
	--rw <path>          bind <path> in the container

	--need-env-vars      see BUBBLEJAIL_ENV_WHITELIST below

	--need-netns         Retain the network namespace

ENVIRONMENT
  $app respects the following environment variables

	BUBBLEJAIL_ENV_WHITELIST
		white-space separated list of variable names which
		are passed to the container

EXAMPLES
	$app --x11 --uid 2222 sh -c 'id -u && xeyes'
	$app --network --ro-bind \$HOME/src /src ls /src
USAGE
}

echo_debug() {
	[ -n "$_debug" ] && printf '+ DEBUG %s\n' "$@"
}

if [ "$#" = "0" ]; then
	usage
	exit 1
fi

_debug=
_network=
_x11=

_need_dev=
_need_dns=
_need_netns=
_need_nss=
_need_proc=
_need_env_vars=
_need_path_ro=
_need_path_rw=

while [ "$#" -gt 0 ]; do
	echo_debug "arg=$1"
	case "$1" in
		--help | -h)
			usage
			exit 0
			;;
		--debug) _debug=y ;;
		--network) _network=y ;;
		--x11 | -X) _x11=y ;;
		--need-dev) _need_dev=y ;;
		--need-dns) _need_dns=y ;;
		--need-proc) _need_proc=y ;;
		--need-nss) _need_nss=y ;;
		--ro)
			_need_path_ro+=" $2"
			shift
			;;
		--rw)
			_need_path_rw+=" $2"
			shift
			;;
		--need-env-vars | -E)
			_need_env_vars="$_need_env_vars $2"
			shift
			;;
		--need-netns) _need_netns=y ;;
		*)
			echo_debug "stop option parsing"
			break
			;;
	esac

	shift
done

[ "$DEBUG" = "y" ] && _debug=y

# high-level options
if [ "$_network" ]; then
	_need_netns=y
	_need_dns=y
	_need_nss=y
fi
if [ "$_x11" ]; then
	: "${XAUTHORITY:="$HOME/.Xauthority"}"
	_need_env_vars+=" DISPLAY"
	_need_env_vars+=" XAUTHORITY"
	_need_path_ro+=" $XAUTHORITY"
	for s in /tmp/.X11-unix/X?*; do
		_need_path_ro+=" $s"
	done
	_need_path_ro+=" /etc/fonts"
fi

_bwrap_feature_args=

# mounts
if [ "$_need_dev" ]; then
	_bwrap_feature_args+=" --dev /dev"
fi
if [ "$_need_proc" ]; then
	_bwrap_feature_args+=" --proc /proc"
fi
if [ "$_need_dns" ]; then
	_bwrap_feature_args+=" --ro-bind /etc/resolv.conf /etc/resolv.conf"
fi
if [ "$_need_nss" ]; then
	_bwrap_feature_args+=" --ro-bind /etc/hosts /etc/hosts"
	_bwrap_feature_args+=" --ro-bind /etc/nsswitch.conf /etc/nsswitch.conf"
fi
if [ "$_need_path_ro" ]; then
	for p in $_need_path_ro; do
		_bwrap_feature_args+=" --ro-bind $p $p"
	done
fi
if [ "$_need_path_rw" ]; then
	for p in $_need_path_rw; do
		_bwrap_feature_args+=" --bind $p $p"
	done
fi

# namespaces
_bwrap_feature_args+=" --unshare-all"
if [ "$_need_netns" ]; then
	_bwrap_feature_args+=" --share-net"
fi

# environment variables
for var in $BUBBLEJAIL_ENV_WHITELIST $_need_env_vars; do
	[ -n "$var" ] || continue
	val="${!var}"
	[ -n "$val" ] || continue
	_bwrap_feature_args+=" --setenv $var $val"
done

[ -n "$_debug" ] && set -x

#shellcheck disable=SC2086
exec env -i bwrap \
	--ro-bind /usr /usr \
	--symlink usr/lib /lib \
	--symlink usr/lib64 /lib64 \
	--symlink usr/bin /bin \
	--symlink usr/sbin /sbin \
	--tmpfs /run \
	--tmpfs /tmp \
	--tmpfs /var \
	--symlink /tmp var/tmp \
	--dir "$HOME" \
	--chdir "$HOME" \
	--as-pid-1 \
	--die-with-parent \
	--unshare-all \
	--setenv PATH /usr/bin \
	--setenv HOME "$HOME" \
	$_bwrap_feature_args \
	"$@"
