#!/bin/bash

usage() {
	app="$(basename "$0")"
	cat <<USAGE
$app [OPTIONS] [BWRAP_OPTIONS] COMMAND [ARGS] - run command in linux container

DESCRIPTION
  Run COMMAND [ARGS] in a sandbox by using the bubblewrap container setup
  utility (see: https://github.com/containers/bubblewrap/).

  The sandbox is configured to be most restrictive by default but allows for
  easy expansion on a per-application base.

  BWRAP_OPTIONS it will be appended to the actual bwrap call and have to be
  provided as a single string each.
	  Example: bubblejail --network "--hostname mysandbox" bash

OPTIONS
  --help               Show this help
  --debug              Show bwrap command line

  --network            Add network features (dns,netns,nss)
  --x11                Make X11 work

  --need-dev           Mount new devtmpfs
  --need-dns           Share resolvers with container
  --need-netns         Retain the network namespace
  --need-nss
  --need-proc          Mount procfs
  --need-env-vars      see BUBBLEJAIL_ENV_WHITELIST below
  --ro <path>          bind <path> in the container (read-only)
  --rw <path>          bind <path> in the container

ENV
  $app respects the following environment variables

  BUBBLEJAIL_ENV_WHITELIST    white-space separated list of variable names which
                              are passed to the container
USAGE
}

echo_debug() {
	[ -n "$_debug" ] && printf '+ DEBUG %s\n' "$@"
}

if [ "$#" = "0" ]; then
	usage
	exit 1
fi

_debug=
_network=
_x11=

_need_dev=
_need_dns=
_need_netns=
_need_nss=
_need_proc=
_need_env_vars=
_need_path_ro=
_need_path_rw=

while [ "$#" -gt 1 ]; do
	arg="$1"
	echo_debug "arg=$arg"
	case "$arg" in
		--help | -h)
			usage
			exit 0
			;;
		--debug) _debug=y ;;
		--network) _network=y ;;
		--need-dev) _need_dev=y ;;
		--need-dns) _need_dns=y ;;
		--need-proc) _need_proc=y ;;
		--need-netns) _need_netns=y ;;
		--need-nss) _need_nss=y ;;
		--x11 | -X) _x11=y ;;
		--need-env-vars | -E)
			_need_env_vars="$2"
			shift
			;;
		--ro)
			_need_path_ro+=" $2"
			shift
			;;
		--rw)
			_need_path_rw+=" $2"
			shift
			;;
		--*) # pass arg to bubblewrap
			_bwrap_extra_args+=" $arg"
			;;
		*) break ;;
	esac

	shift
done

[ "$DEBUG" = "y" ] && _debug=y

# high-level options
if [ "$_network" ]; then
	_need_netns=y
	_need_dns=y
	_need_nss=y
fi
if [ "$_x11" ]; then
	: "${XAUTHORITY:="$HOME/.Xauthority"}"
	_need_env_vars+=" DISPLAY"
	_need_env_vars+=" XAUTHORITY"
	_need_path_ro+=" $XAUTHORITY"
	_need_path_ro+=" /tmp/.X11-unix/X1"
	_need_path_ro+=" /etc/fonts"
fi

# low-level options
_bwrap_feature_args=
if [ "$_need_dev" ]; then
	_bwrap_feature_args+=" --dev /dev"
fi
if [ "$_need_proc" ]; then
	_bwrap_feature_args+=" --proc /proc"
fi
if [ "$_need_dns" ]; then
	_bwrap_feature_args+=" --ro-bind /etc/resolv.conf /etc/resolv.conf"
fi
if [ "$_need_netns" ]; then
	_bwrap_feature_args+=" --share-net"
fi
if [ "$_need_nss" ]; then
	_bwrap_feature_args+=" --ro-bind /etc/hosts /etc/hosts"
	_bwrap_feature_args+=" --ro-bind /etc/nsswitch.conf /etc/nsswitch.conf"
fi
if [ "$_need_path_ro" ]; then
	for p in $_need_path_ro; do
		_bwrap_feature_args+=" --ro-bind $p $p"
	done
fi
if [ "$_need_path_rw" ]; then
	for p in $_need_path_rw; do
		_bwrap_feature_args+=" --bind $p $p"
	done
fi

# environment variables
_bwrap_env_vars=
for var in $BUBBLEJAIL_ENV_WHITELIST $_need_env_vars; do
	[ -n "$var" ] || continue
	val="${!var}"
	[ -n "$val" ] || continue
	_bwrap_env_vars+=" --setenv $var $val"
done

[ -n "$_debug" ] && set -x

#shellcheck disable=SC2086
exec env -i bwrap \
	--ro-bind /usr /usr \
	--symlink usr/lib /lib \
	--symlink usr/lib64 /lib64 \
	--symlink usr/bin /bin \
	--symlink usr/sbin /sbin \
	--tmpfs /run \
	--tmpfs /tmp \
	--tmpfs /var \
	--symlink /tmp var/tmp \
	--chdir / \
	--as-pid-1 \
	--die-with-parent \
	--unshare-all \
	--setenv PATH /usr/bin \
	$_bwrap_env_vars \
	$_bwrap_feature_args \
	$_bwrap_extra_args \
	"$@"
